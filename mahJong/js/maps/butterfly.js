"use strict";

if (typeof window.maps === "undefined") {
	window.maps = { };
}
if (typeof window.maps.butterfly === "undefined") {
	window.maps.butterfly = function() {
		var map = [ ];

		var addTile = function(x, y, z, w, h) {
			map.push({
				x: x || 0,
				y: y || 0,
				z: z || 0,
				w: w || 1,
				h: h || 1
			});
		};

		var row = function(y, z, values) {
			for (var i = 0; i < values.length; i++) {
				addTile(values[i], y, z);
			}
		};

		row(0, 0, [3.5, 4.5, 5.5, 10.5, 11.5, 12.5]);
		row(0, 1, [5.5, 10.5]);

		row(0.5, 0, [2.5, 13.5]);

		row(1, 0, [6, 10]);
		row(1, 1, [6, 10]);

		row(1.5, 0, [2, 7.5, 8.5, 14]);
		row(1.5, 0, [4, 12]);
		row(1.5, 1, [4, 8, 12]);
		row(1.5, 2, [4, 12]);

		row(2, 0, [6.5, 9.5]);
		row(2, 1, [6.5, 9.5]);
		row(2, 2, [6.5, 9.5]);

		row(2.5, 0, [2.5, 7.5, 8.5, 13.5]);
		row(2.5, 1, [7.5, 8.5]);
		row(2.5, 2, [8]);
		row(2.5, 3, [8]);

		row(3, 0, [3.5, 12.5]);

		row(3.5, 0, [1.5, 4.5, 7.5, 8.5, 11.5, 14.5]);
		row(3.5, 1, [4.5, 8, 11.5]);
		row(3.5, 2, [8]);

		row(4, 0, [0.5, 5.5, 10.5, 15.5]);
		row(4, 1, [5.5, 10.5]);

		row(4.5, 0, [6.5, 7.5, 8.5, 9.5]);
		row(4.5, 1, [3, 6.5, 7.5, 8.5, 9.5, 13]);
		row(4.5, 2, [6.5, 8, 9.5]);
		row(4.5, 3, [3, 8, 13]);

		row(5, 0, [0, 2.5, 3.5, 12.5, 13.5, 16]);
		row(5, 2, [2.5, 3.5, 12.5, 13.5]);

		row(5.5, 0, [7.5, 8.5]);
		row(5.5, 1, [2, 4, 8, 12, 14]);
		row(5.5, 2, [8]);
		row(5.5, 3, [2, 3, 4, 12, 13, 14]);
		row(5.5, 4, [3, 13]);

		row(6, 0, [0, 2.5, 3.5, 12.5, 13.5, 16]);
		row(6, 2, [2.5, 3.5, 12.5, 13.5]);

		row(6.5, 0, [6.5, 7.5, 8.5, 9.5]);
		row(6.5, 1, [3, 6.5, 7.5, 8.5, 9.5, 13]);
		row(6.5, 2, [6.5, 8, 9.5]);
		row(6.5, 3, [3, 8, 13]);

		row(7, 0, [0.5, 5.5, 10.5, 15.5]);
		row(7, 1, [5.5, 10.5]);

		row(7.5, 0, [1.5, 4.5, 7.5, 8.5, 11.5, 14.5]);
		row(7.5, 1, [4.5, 8, 11.5]);

		row(8, 0, [2.5, 3.5, 12.5, 13.5]);

		map.sort(function(a, b) {
			return (a.z * 100 + a.y * 1 + a.x * 1) - (b.z * 100 + b.y * 1 + b.x * 1);
		});
		return map;
	};

	window.maps.butterfly.displayName = "Farfalla";
}
